plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'JagoNgadpro'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.1.5'
	implementation 'com.fasterxml.uuid:java-uuid-generator:4.0.1'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc:4.1.3'


}
//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.0"
//	}
//}
tasks.named('test') {
	useJUnitPlatform()
}
tasks.test {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport) // report is always generated after tests run
}
tasks.jacocoTestReport {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/*Application**'])
		}))
	}
	dependsOn(tasks.test) // tests are required to run before generating the report
	reports {
		xml.required = true
		html.required = true
	}


}

sonarqube {
	properties {
		property "sonar.projectKey", "B9JagoNgadpro_Autentikasi"
		property "sonar.organization", "b9jagongadpro"
		property "sonar.java.binaries", "."
		property "sonar.gradle.skipCompile", "true"
	}
}

